(()=>{"use strict";var e={126:(e,n,r)=>{var t=r(963),o=r(844),s=(r(919),r(252)),i=r(577);const a={class:"main"},c=(0,s._)("h2",{class:"title"},"Extension Demo3",-1),l={class:"req_title"},u=(0,s.Uk)("request");function f(e,n,r,t,f,p){const v=o.mi;return(0,s.wg)(),(0,s.iD)("div",a,[c,(0,s._)("h3",l,"fetch_fake: "+(0,i.zw)(e.resp),1),(0,s.Wm)(v,{onClick:e.req,type:"success"},{default:(0,s.w5)((()=>[u])),_:1},8,["onClick"])])}var p=r(262);const v=(0,s.aZ)({setup(){let e=(0,p.iH)("null");const n=()=>{const n=chrome.runtime.connect({name:"ping"});n.onMessage.addListener((n=>{console.log(n),e.value=`${n.msg}${n.index}`})),n.postMessage("ping")};return{resp:e,req:n}}});var d=r(744);const h=(0,d.Z)(v,[["render",f]]),m=h,g={class:"main"};function b(e,n,r,t,o,i){const a=m;return(0,s.wg)(),(0,s.iD)("div",g,[(0,s.Wm)(a)])}const w=(0,s.aZ)({components:{Req:m}}),O=(0,d.Z)(w,[["render",b]]),k=O,y=(0,t.ri)(k);y.mount("#app")}},n={};function r(t){var o=n[t];if(void 0!==o)return o.exports;var s=n[t]={exports:{}};return e[t](s,s.exports,r),s.exports}r.m=e,(()=>{var e=[];r.O=(n,t,o,s)=>{if(!t){var i=1/0;for(u=0;u<e.length;u++){for(var[t,o,s]=e[u],a=!0,c=0;c<t.length;c++)(!1&s||i>=s)&&Object.keys(r.O).every((e=>r.O[e](t[c])))?t.splice(c--,1):(a=!1,s<i&&(i=s));if(a){e.splice(u--,1);var l=o();void 0!==l&&(n=l)}}return n}s=s||0;for(var u=e.length;u>0&&e[u-1][2]>s;u--)e[u]=e[u-1];e[u]=[t,o,s]}})(),(()=>{r.d=(e,n)=>{for(var t in n)r.o(n,t)&&!r.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})}})(),(()=>{r.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}()})(),(()=>{r.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n)})(),(()=>{var e={798:0,42:0};r.O.j=n=>0===e[n];var n=(n,t)=>{var o,s,[i,a,c]=t,l=0;if(i.some((n=>0!==e[n]))){for(o in a)r.o(a,o)&&(r.m[o]=a[o]);if(c)var u=c(r)}for(n&&n(t);l<i.length;l++)s=i[l],r.o(e,s)&&e[s]&&e[s][0](),e[s]=0;return r.O(u)},t=self["webpackChunkextensions_demo"]=self["webpackChunkextensions_demo"]||[];t.forEach(n.bind(null,0)),t.push=n.bind(null,t.push.bind(t))})();var t=r.O(void 0,[998],(()=>r(126)));t=r.O(t)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,